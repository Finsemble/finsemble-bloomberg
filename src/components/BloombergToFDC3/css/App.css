/* Proposed standard for styling scrollbars. Not yet supported in 
Webkit/Chrome/Electron but will be in the future.*/
html, body {
	scrollbar-width: thin;
	scrollbar-color: var(--core-primary-4) var(--core-primary);
}

/* Vendor prefix styles currently supported by Webkit/Chrome/Electron.*/
::-webkit-scrollbar {
	width: 8px;
}

::-webkit-scrollbar-track {
	background: var(--core-primary);
}

::-webkit-scrollbar-thumb {
	background-color: var(--core-primary-4);
	border-radius: 8px;
	border: 2px solid var(--core-primary);
}


html, body, #root {
  height: 100%;
  background: var(--core-primary-1);
  color: var(--font-color);
  font-family: var(--font-family);
  font-size: var(--font-size);
  margin: 0px;
}

#container {
  display: flex;
  flex-direction: column;
  height: 100%;
  background: var(--titleBar-background-inactive-color);
}

.content {
  font-weight: var(--font-weight);
  margin: 8px;
  flex-grow: 1;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  flex-basis: 220px;
}

/* Search Box 
   Styles for the autosuggest component.

   TODO: replace these with a react-themable theme: https://github.com/moroshko/react-autosuggest#theme-prop 
*/
.react-autosuggest__container {
	background-color: var(--core-primary);
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	flex-shrink: 0;
	min-height: 80px;
  justify-content: space-around;
  margin: 8px;
}

.react-autosuggest__input {
	font-family: var(--font-family);
	font-weight: var(--font-weight);
	font-size: 16px;
	background-color: white;
	height: 24px;
	flex-grow: 0;
	flex-shrink: 0;
}

.react-autosuggest__input--focused {
	outline: var(--accent-primary) auto 1px;
	outline-offset: 1px;
}

.react-autosuggest__suggestions-container {
	background-color: var(--core-primary-3);
	display: flex;
	flex-grow: 1;
	flex-shrink: 1;
  overflow-y: auto;
  flex-basis: 50px;
}

.react-autosuggest__suggestions-container--open {

}

.react-autosuggest__suggestions-list {
	flex-grow: 1;
	flex-shrink: 1;
  list-style-type: none;
	padding-left: 12px;
}

.react-autosuggest__suggestion {
	color: var(--font-color-1);
	font-family: var(--font-family);
	font-weight: var(--font-weight-1);
	font-size: 14px;
}

.react-autosuggest__suggestion--highlighted {
	color: var(--font-color);
}

.react-autosuggest__section-container {
	display: block;
	flex-grow: 1;
	flex-shrink: 1;
}


/* Tabs and forms */
[role='tab']{
  background-color: var(--titlebar-tab-inactive-background-color);
  color: var(--titlebar-tab-inactive-font-color);
  border-top-left-radius: 7px;
  border-top-right-radius: 7px;
  border: none;
  padding: 5px 10px;
  cursor: pointer;
}

[role='tab'][aria-selected='true']{
  background-color: var(--titlebar-tab-active-background-color);
  color: var(--titlebar-tab-active-font-color);
}

[role='tablist']{
  margin-top: 0px;
  display: flex;
  flex-grow: 0;
	flex-shrink: 0;
}

[role='tabpanel']{
  position: relative;
  background-color: var(--core-primary-4);
  top: -1px;
  border-radius: 4px;
  flex-grow: 1;
  padding: 16px;
}

[role='tabpanel'][data-active='false']{
  display: none;
}

.checkbox-container {
  display: block;
  margin-top: 12px;
}

.checkbox-container label {
  display: block;
}

.error-warning {
  color: var(--accent-negative);
  font-weight: bold;
}

.error-warning[aria-disabled=true]{
  display: none;
}

.full-width {
  width: 100%
}

.flex {
  display: flex;
  flex-direction: row;
}

.flex.center {
  justify-content: center;
}

.margin-top-10 {
  margin-top: 10px;
}

table th {
  text-align: left;
  min-width: 90px;
  max-width: 90px;
}

#command-list tbody tr td { 
  padding: 0px;
}



.add-form-container[aria-disabled=true] {
  display: none;
}

.add-form-container[aria-disabled=false] {
  display: block;
}

.add-form-button[aria-disabled=true] {
  display: none;
}

.add-form-button[aria-disabled=false] {
  display: flex;
}

.add-form-button {
  flex-grow: 0;
  height: 24px;
  width: 120px;
}

.add-form-container {
  margin-top: 10px;
  padding: 10px;
  background-color: var(--core-primary-3);
  overflow: auto;
}

.add-form-container table tbody tr td {
  display:flex;
  flex-direction: row;
  padding: 2px;
}

h3 {
  margin-top: 5px;
}

.add-form-container .mnemonic-input {
  width: 54px;
  text-align: center;
  flex-grow: 0;
  box-sizing: border-box;
  text-transform: uppercase;
}

.add-form-container .stretchy-input {
  flex-grow: 1;
  flex-shrink: 1;
  min-width: 40px;
  box-sizing: border-box;
}

/* Button styles */
button {
  cursor: pointer;
}

.buttons-cell {
  margin-top: 8px;
  justify-content: flex-end;
}

.edit-btn, .delete-btn, .command-btn {
  width: 25px;
  height: 25px;
  background-color: var(--core-primary-4);
  margin-bottom: 0px;
}

.command-btn {
  flex-grow: 1;
}

.finsemble__btn {
  align-items: center;
  background-color: var(--core-primary-3);
  border-radius: 5px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 2px;
  margin-right: 2px;
}

.finsemble__btn span.btn-label {
  overflow: hidden;
  text-align: center;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
  padding: 4px 10px;
  color: var(--font-color);
}

.finsemble__btn:hover,
.finsemble__btn:focus {
  background-color: var(--core-primary-2);
}

.finsemble__btn.accent {
  background-color: var(--accent-primary);
}


.finsemble__btn.accent:hover,
.finsemble__btn.accent:focus {
  background-color: var(--accent-primary-1);
}
